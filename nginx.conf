server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Security headers (but allow proper MIME types for static assets)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Include MIME type definitions
    include /etc/nginx/mime.types;

    # Common stylesheet served from root
    location = /common.css {
        expires 5m;
        add_header Cache-Control "public, max-age=300";
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        try_files /common.css =404;
    }

    # Root path - could serve a tool directory listing or landing page
    location = / {
        try_files /index.html =404;
    }

    # Handle tool directories - each tool should have its own folder
    location ~ ^/([^/]+)/(.*)$ {
        set $tool_name $1;
        set $file_path $2;

        # If no file specified, serve the tool's index.html
        if ($file_path = "") {
            set $file_path "index.html";
        }

        # For static assets, set proper headers without nosniff
        if ($file_path ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$) {
            expires 5m;
            add_header Cache-Control "public, max-age=300";
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-XSS-Protection "1; mode=block" always;
        }

        # For HTML files, add nosniff header
        if ($file_path ~* \.html$) {
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-XSS-Protection "1; mode=block" always;
        }

        try_files /$tool_name/$file_path /$tool_name/index.html =404;
    }

    # Redirect tool access without trailing slash to version with trailing slash
    location ~ ^/([^/]+)$ {
        return 301 $scheme://$host$request_uri/;
    }
}